@model Conference.Models.User

@{
    ViewBag.Title = "Login";
}
<link rel="stylesheet" href="https://almsaeedstudio.com/themes/AdminLTE/dist/css/AdminLTE.min.css">

<div class="row">
    <div class="col-md-3">
        <div class="box" style="margin:20px 0 20px 0">
            <h2 style="text-align:center;font-family:Arial;">Login</h2>

            @using (Html.BeginForm("Login", "Home", FormMethod.Post))
            {
                //cria a tag do formulário
                @Html.AntiForgeryToken()
                // previne o ataque CSRF
                @Html.ValidationSummary(true)
                if (@ViewBag.Message != null)
                {
                    <div style="border:1px solid red">
                        @ViewBag.Message
                    </div>
                }

                <div class="form-group has-feedback" style="width:100%">
                    @Html.TextBoxFor(a => a.Username, new { @class = "form-control", placeholder = "Usuário" })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(a => a.Username)
                </div>


                <div class="form-group has-feedback">
                    @Html.PasswordFor(a => a.Password, new { @class = "form-control", placeholder = "Senha" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>

                    @Html.ValidationMessageFor(a => a.Password)
                </div>

                        <input type="submit" value="Login" class="btn btn-primary btn-block btn-flat" />

            }
            @section Scripts{
                @Scripts.Render("~/bundles/jqueryval")
            }
        </div>
    </div>
    <div class="col-md-9">

        <div class="box" style="margin:20px 0 20px 0">
            <div class="box-header " >

                <h3 class="box-title">
                    <span class="glyphicon glyphicon-calendar "></span>
                    Programação
                </h3>
                   
            </div>
            <div class="box-body">

                <div id="timeline">
                    <!-- The timeline -->
                    <ul class="timeline timeline-inverse">
                        <!-- timeline time label -->
                        <li class="time-label">
                            <span class="bg-gray">
                                Palestras
                            </span>
                        </li>
                        @foreach (var item in (ViewBag.ScheduleCollection as List<Conference.Models.Schedule>))
                        {
                            <li>
                                <i class="glyphicon glyphicon-user"></i>

                                <div class="timeline-item">
                                    <span class="time"><i class="glyphicon glyphicon-time"></i> @Html.DisplayFor(modelItem => item.DateHour)</span>

                                    <h3 class="timeline-header"><a href="#">
                                        @Html.LabelFor(modelItem => item.Pid,
(ViewBag.Presentation as List<Conference.Models.Presentation>
).Where(p => p.Pid == item.Pid).FirstOrDefault().Title,
htmlAttributes: new { @readonly = true, @style = "border:none;out-line:none;" })

                                        </a> com @Html.LabelFor(modelItem => item.Pid,
(ViewBag.Presenter as List<Conference.Models.Presenter>).Where(pr => pr.Id ==
(ViewBag.Presentation as List<Conference.Models.Presentation>
).Where(p => p.Pid == item.Pid).FirstOrDefault().PresenterId).FirstOrDefault().Name


    ,
    htmlAttributes: new { @readonly = true, @style = "border:none;out-line:none;" })


</h3>
                                    <p class="timeline-body"><b>Localização : </b>@Html.DisplayFor(modelItem => item.Host)</p>
                                    <div class="timeline-body">
                                       @Html.LabelFor(modelItem => item.Pid,
    (ViewBag.Presentation as List<Conference.Models.Presentation>
        ).Where(p => p.Pid == item.Pid).FirstOrDefault().Abstract,
        htmlAttributes: new { @readonly = true, @style = "border:none;out-line:none;" })
                                    </div>
                                    <div class="timeline-footer">
                                        <span class="btn btn-primary btn-xs">
                                        @{
                                            var tag = (ViewBag.Presentation as List<Conference.Models.Presentation>).Where(p => p.Pid == item.Pid).FirstOrDefault().Kind.Replace(" ", "</span> <span class='btn btn-primary btn-xs'>");
                                            WriteLiteral(tag);
                                        }
                                    </span>



</div>
                                </div>
                            </li>
                        }

                        <li>
                            <i class="fa fa-clock-o bg-gray"></i>
                        </li>
                    </ul>
                </div>
                <!-- /.tab-pane -->


            </div>
            <!-- /.tab-content -->
        </div>
    </div>
</div> 
