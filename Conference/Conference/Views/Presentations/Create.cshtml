@model Conference.Models.Presentation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Presentation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.PresenterId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.EditorFor(model => model.Presenter, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Presenter, "", new { @class = "text-danger" })*@
               @* @Html.DropDownListFor(model => model.Presenter, new SelectList(ViewBag.PresenterCollection))
    @Html. (ViewBag.EmailColletction);*@ 
                @* ^linhas usadas para entrada em caixa de texto *@


                @Html.DropDownListFor(model => model.PresenterId, (ViewBag.PresenterCollection as List<Conference.Models.Presenter>
               ).Select(item => new SelectListItem
                           {
                               Value = item.Id.ToString(),
                               Text = item.Name
                           })


               )

                <span id="lPresenter"></span>
                @Html.ValidationMessageFor(model => model.PresenterId, "", new { @class = "text-danger" })


                    @*@Html.DropDownListFor(model => model.Presenter, (ViewBag.PresenterCollection as List<SelectListItem>
                        )
                        .Select(option => new SelectListItem
                        {
                        Text = option.Text,
                        Value = option.Value,
                        Selected = "select" == option.Value ? true : false
                        })*@

</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kind, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Kind, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
